"use strict";(()=>{var e={};e.id=11,e.ids=[11],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7618:e=>{e.exports=import("bcryptjs")},4420:(e,t,a)=>{a.a(e,async(e,s)=>{try{a.r(t),a.d(t,{config:()=>d,default:()=>c,routeModule:()=>u});var r=a(1802),n=a(7153),o=a(6249),i=a(5545),l=e([i]);i=(l.then?(await l)():l)[0];let c=(0,o.l)(i,"default"),d=(0,o.l)(i,"config"),u=new r.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/auth/signup",pathname:"/api/auth/signup",bundlePath:"",filename:""},userland:i});s()}catch(e){s(e)}})},7226:(e,t,a)=>{let s;a.d(t,{Z:()=>o});let r=require("mongodb"),n=process.env.MONGODB_URI;if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");{let e=new r.MongoClient(n,{});s=e.connect()}let o=s},5545:(e,t,a)=>{a.a(e,async(e,s)=>{try{a.r(t),a.d(t,{default:()=>handler});var r=a(7226),n=a(7618),o=e([n]);async function handler(e,t){if("POST"!==e.method)return t.status(405).json({message:"Method not allowed"});try{let{email:a,password:s,name:o}=e.body,i=await r.Z,l=i.db(),c=await l.collection("users").findOne({email:a});if(c)return t.status(400).json({message:"User already exists"});let d=await n.default.hash(s,10);await l.collection("users").insertOne({email:a,password:d,name:o,balance:0,createdAt:new Date}),t.status(201).json({message:"User created successfully"})}catch(e){console.error(e),t.status(500).json({message:"Something went wrong"})}}n=(o.then?(await o)():o)[0],s()}catch(e){s(e)}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[222],()=>__webpack_exec__(4420));module.exports=a})();